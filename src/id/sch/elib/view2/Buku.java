/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.sch.elib.view2;

import id.sch.elib.controller.BukuController;
import id.sch.elib.model.Penerbit;
import id.sch.elib.model.RakBuku;
import id.sch.elib.util.DataLibrary;
import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rizky.aditya
 */
public class Buku extends javax.swing.JFrame {

    /**
     * Creates new form Buku
     */
    private BukuController bukuController;
    private DefaultTableModel tableModel;
    private ArrayList<id.sch.elib.model.Buku> masterBukuList;
    private ArrayList<id.sch.elib.model.Buku> bukuList;
    private ArrayList<String> columnName;
    private boolean editMode;
    private id.sch.elib.model.Buku bukuModel;
    private ArrayList<Penerbit> penerbitList;
    private ArrayList<RakBuku> rakBukuList;
    private File selectedFile;

    public Buku() {
        initComponents();
        reInitValiables();

        tableList.setAutoCreateRowSorter(true);
        bukuController = new BukuController();
        columnName = new ArrayList<>();
        columnName.add("ISBN");
        columnName.add("Judul");
        columnName.add("Kategori");
        columnName.add("Penerbit");
        columnName.add("Tahun Terbit");
        columnName.add("Stock");

        //set search column by
        searchColumnCb.removeAllItems();
        for (int i = 0; i < columnName.size(); i++) {
            searchColumnCb.addItem(columnName.get(i));
        }

        //set rak buku
        rakBukuList = DataLibrary.getInstance().getMasterListRakBuku(true);
        rakBuku.removeAllItems();
        for (int i = 0; i < rakBukuList.size(); i++) {
            rakBuku.addItem(rakBukuList.get(i).getNoDdc() + "-" + rakBukuList.get(i).getNamaJenis());
        }

        //set penerbit cmb box
        penerbitCmb.removeAllItems();
        penerbitList = DataLibrary.getInstance().getMasterListPenerbit(false);
        for (int i = 0; i < penerbitList.size(); i++) {
            penerbitCmb.addItem(penerbitList.get(i).getId() + "-" + penerbitList.get(i).getNamaPenerbit());
        }
        //set table value
        masterBukuList = bukuController.fetchData(masterBukuList, false);
        bukuList = masterBukuList;
        setTableValue();
        
        Buku.this.setExtendedState(Buku.this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
    }

    public void setTableValue() {
        tableModel = new DefaultTableModel(columnName.toArray(), bukuList.size());
        tableList.setModel(tableModel);
        for (int i = 0; i < bukuList.size(); i++) {
            tableList.setValueAt(bukuList.get(i).getIsbn(), i, 0);
            tableList.setValueAt(bukuList.get(i).getJudul(), i, 1);
            tableList.setValueAt(bukuList.get(i).getRakBuku().getNamaJenis(), i, 2);
            tableList.setValueAt(bukuList.get(i).getPenerbit().getNamaPenerbit(), i, 3);
            tableList.setValueAt(bukuList.get(i).getTahunTerbit(), i, 4);
            tableList.setValueAt(bukuList.get(i).getStock(), i, 5);
        }
    }

    public void resetAllFieldInput() {
        isbnTxt.setText("");
        judulTxt.setText("");
        rakBuku.setSelectedIndex(0);
        penerbitCmb.setSelectedIndex(0);
        tahunTerbitTxt.setText("");
        pathLabel.setText("");
        stockSpinner.setValue(0);
        masaPinjamSpinner.setValue(0);
        selectedFile = new File("");
        image.setIcon(new ImageIcon());
        sizeTxt.setText("");
    }

    public void reInitValiables() {
        bukuModel = new id.sch.elib.model.Buku();
        selectedFile = new File("");
        editMode = false;
        editButton.setSelected(editMode);
        editButton.setText("Edit Record");
        pathLabel.setText("");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        isbnTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        judulTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rakBuku = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        penerbitCmb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        tahunTerbitTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        stockSpinner = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        masaPinjamSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        pathLabel = new javax.swing.JLabel();
        browse = new javax.swing.JButton();
        previewPanel = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        sizeTxt = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        searchColumnCb = new javax.swing.JComboBox();
        searchValue = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Manager SMA Negeri 1 Baleendah - Alpha Version 2.0");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("ISBN *");

        jLabel2.setText("Judul *");

        jLabel5.setText("Kategori *");

        rakBuku.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Penerbit *");

        penerbitCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Tahun Terbit");

        jLabel8.setText("Stock");

        jLabel10.setText("Masa Pinjam *");

        jLabel6.setText("Cover");

        pathLabel.setText("path");

        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        previewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addComponent(sizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 141, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("* Mandatory field");

        back.setText("Back to Main Menu");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(stockSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(penerbitCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rakBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(judulTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(isbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tahunTerbitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(masaPinjamSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(pathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(browse))))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(isbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(judulTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rakBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(penerbitCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tahunTerbitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(stockSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(masaPinjamSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pathLabel)
                    .addComponent(browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(submit)
                    .addComponent(back))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel2, gridBagConstraints);

        jLabel7.setText("Search by");

        searchColumnCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchColumnCb, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel7)
                .addComponent(searchColumnCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchBtn))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 10);
        getContentPane().add(jPanel3, gridBagConstraints);

        deleteButton.setText("Delete Record");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 6, 0, 0);
        getContentPane().add(deleteButton, gridBagConstraints);

        editButton.setText("jToggleButton1");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 6, 0, 0);
        getContentPane().add(editButton, gridBagConstraints);

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 365;
        gridBagConstraints.ipady = 327;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Penerbit findPenerbitById(long id) {
        int index = 0;
        while (penerbitList.size() > index) {
            if (penerbitList.get(index).getId() == id) {
                return penerbitList.get(index);
            }
            index++;
        }
        return null;
    }

    public RakBuku findRakBukuByDdc(String id) {
        int index = 0;
        while (rakBukuList.size() > index) {
            if (rakBukuList.get(index).getNoDdc().equals(id)) {
                return rakBukuList.get(index);
            }
            index++;
        }
        return null;
    }
    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("JPEG file", "jpg", "jpeg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            // user selects a file
            try {
                selectedFile = fileChooser.getSelectedFile();
                String pathName = selectedFile.getAbsolutePath();
                Image img = ImageIO.read(selectedFile);
                img = img.getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                image.setIcon(icon);
                //TODO trim pathName
                pathLabel.setText(pathName);
                int i = 0;
                long size = selectedFile.length();
                while (size >= 1024) {
                    size = size / 1024;
                    i++;
                }
                sizeTxt.setText(size + " " + DataLibrary.getInstance().getSizeScale(i));
                //TODO save to db
            } catch (Exception e) {
                System.out.println("EXCEPTION IN IMG LOAD: " + e.getMessage());
            }
        } else {
            image.setIcon(new ImageIcon());
            sizeTxt.setText("");
        }
    }//GEN-LAST:event_browseActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        String isbn = isbnTxt.getText();
        String judul = judulTxt.getText();
        //        String rakStr[] = ((String) rakBuku.getSelectedItem()).split("-");
        //        RakBuku rak = findRakBukuByDdc(rakStr[0]);
        RakBuku rak = rakBukuList.get(rakBuku.getSelectedIndex());
        //        String penerbitStr[] = ((String) penerbitCmb.getSelectedItem()).split("-");
        //        Penerbit penerbit = findPenerbitById(Long.parseLong(penerbitStr[0]));
        Penerbit penerbit = penerbitList.get(penerbitCmb.getSelectedIndex());
        String tahun = tahunTerbitTxt.getText();
        byte[] cover;
        try {
            System.out.println("CONVERTING IMAGE TO BYTE[]");
            cover = Files.readAllBytes(selectedFile.toPath());
            System.out.println("IMAGE CONVERTED");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "CONVERT ERROR: " + e.getMessage(), "IMAGE CONVERT ERROR", JOptionPane.WARNING_MESSAGE);
            System.out.println("CONVERT ERROR: " + e.getMessage());
            cover = new byte[0];
        }
        //        byte[] cover = selectedFile.;
        int stock = (Integer) stockSpinner.getValue();
        int masaPinjam = (Integer) masaPinjamSpinner.getValue();
        if (!isbn.equals("") && !judul.equals("") && rak != null && penerbit != null && masaPinjam > 0) {
            bukuModel.setIsbn(isbn);
            bukuModel.setJudul(judul);
            bukuModel.setRakBuku(rak);
            bukuModel.setPenerbit(penerbit);
            bukuModel.setTahunTerbit(tahun);
            bukuModel.setMasaPinjam(masaPinjam);
            bukuModel.setStock(stock);
            bukuModel.setCover(cover);
            bukuModel.setActive(true);
            bukuModel.setUserInput(DataLibrary.getInstance().getUser().getUsername());

            bukuController.setBukuModel(bukuModel);
            bukuController.setEditMode(editMode);
            String message = bukuController.save();
            if (!message.equals("success")) {
                JOptionPane.showMessageDialog(null, (editMode ? "Update" : "Submit") + " data gagal", "Submit Data Error", JOptionPane.ERROR_MESSAGE);
            }
            resetAllFieldInput();
            reInitValiables();

            //refresh table
            masterBukuList = bukuController.fetchData(masterBukuList, true);
            bukuList = masterBukuList;
            setTableValue();
        } else {
            JOptionPane.showMessageDialog(null, "One or more field is empty, Cannot insert data", "INPUT-ERROR", 0);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        resetAllFieldInput();
    }//GEN-LAST:event_cancelActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        bukuList = new ArrayList<>();
        String searchCol = searchColumnCb.getSelectedItem().toString();
        String searchParam = searchValue.getText();
        if (!searchParam.equals("")) {
            for (int i = 0; i < masterBukuList.size(); i++) {
                switch (searchCol) {
                    case "ISBN":
                    if (masterBukuList.get(i).getIsbn().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    case "Judul":
                    if (masterBukuList.get(i).getJudul().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    case "Kategori":
                    if (masterBukuList.get(i).getRakBuku().getNamaJenis().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    case "Penerbit":
                    if (masterBukuList.get(i).getPenerbit().getNamaPenerbit().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    case "Tauhun Terbit":
                    if (masterBukuList.get(i).getTahunTerbit().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    case "Stock":
                    if (masterBukuList.get(i).getStock().toString().toLowerCase().contains(searchParam.toLowerCase())) {
                        bukuList.add(masterBukuList.get(i));
                    }
                    break;
                    default:
                    JOptionPane.showMessageDialog(null, "Column name or search field cannot be empty", "SEARCH-ERROR", 0);
                    break;
                }
            }
        } else {
            bukuList = masterBukuList;
        }
        setTableValue();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (editButton.isSelected()) {
            editButton.setText("Cancel Edit");
            editMode = true;
            bukuModel = bukuList.get(tableList.getSelectedRow());

            isbnTxt.setText(bukuModel.getIsbn());
            judulTxt.setText(bukuModel.getJudul());
            penerbitCmb.setSelectedItem(bukuModel.getPenerbit().getId() + "-" + bukuModel.getPenerbit().getNamaPenerbit());
            rakBuku.setSelectedItem(bukuModel.getRakBuku().getNoDdc() + "-" + bukuModel.getRakBuku().getNamaJenis());
            tahunTerbitTxt.setText(bukuModel.getTahunTerbit());
            stockSpinner.setValue(bukuModel.getStock());
            masaPinjamSpinner.setValue(bukuModel.getMasaPinjam());

            try {
                //                selectedFile = fileChooser.getSelectedFile();
                FileOutputStream fo = new FileOutputStream("img.jpg");
                fo.write(bukuModel.getCover());
                fo.close();
                selectedFile = null;
                selectedFile = new File("img.jpg");
                String pathName = selectedFile.getAbsolutePath();
                Image img = ImageIO.read(selectedFile);
                img = img.getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                image.setIcon(icon);
                //TODO trim pathName
                pathLabel.setText(pathName);
                int i = 0;
                long size = selectedFile.length();
                while (size >= 1024) {
                    size = size / 1024;
                    i++;
                }
                sizeTxt.setText(size + " " + DataLibrary.getInstance().getSizeScale(i));
            } catch (Exception e) {
                System.out.println("EXCEPTION IN IMG LOAD: " + e.getMessage());
            }
        } else {
            editButton.setText("Edit Record");
            editMode = false;
            bukuModel = new id.sch.elib.model.Buku();
            if (selectedFile.exists()) {
                selectedFile.delete();
            }
            resetAllFieldInput();
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        MainMenu mn = new MainMenu();
        mn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Buku().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton browse;
    private javax.swing.JButton cancel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JToggleButton editButton;
    private javax.swing.JLabel image;
    private javax.swing.JTextField isbnTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField judulTxt;
    private javax.swing.JSpinner masaPinjamSpinner;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JComboBox penerbitCmb;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JComboBox rakBuku;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox searchColumnCb;
    private javax.swing.JTextField searchValue;
    private javax.swing.JLabel sizeTxt;
    private javax.swing.JSpinner stockSpinner;
    private javax.swing.JButton submit;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField tahunTerbitTxt;
    // End of variables declaration//GEN-END:variables
}
