/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.sch.elib.view;

import id.sch.elib.controller.SumberBukuController;
import id.sch.elib.model.Buku;
import id.sch.elib.model.Pengguna;
import id.sch.elib.model.SumberBuku;
import id.sch.elib.util.DataLibrary;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rizky.aditya
 */
public class ViewDonasi extends javax.swing.JInternalFrame {

    private final SumberBukuController sumberBukuController;
    private DefaultTableModel tableModel;
    private ArrayList<SumberBuku> masterSumberBukuList;
    private ArrayList<SumberBuku> sumberBukuList;
    private ArrayList<Buku> bukuList;
    private ArrayList<Pengguna> penggunaList;
    private ArrayList<String> columnName;
    private boolean editMode;
    private SumberBuku sumberBukuModel;

    /**
     * Creates new form DonasiBuku
     */
    public ViewDonasi() {
        initComponents();
        reInitValiables();
        resetInfoBuku();
        tableView.setAutoCreateRowSorter(true);
        sumberBukuController = new SumberBukuController();
        columnName = new ArrayList<String>();
        columnName.add("No.");
        columnName.add("No. Induk");
        columnName.add("Nama Donatur");
        columnName.add("Judul Buku");
        columnName.add("Jumlah");
        searchColCmb.removeAllItems();
        for (int i = 1; i < columnName.size(); i++) {
            String col = columnName.get(i);
            searchColCmb.addItem(col);
        }
        //set pengguna to cmb
        penggunaList = DataLibrary.getInstance().getMasterPenggunaList(true);
        noIndukCmb.removeAllItems();
        noIndukCmb.addItem("--Pilih No. Induk--");
        for (int i = 0; i < penggunaList.size(); i++) {
            Pengguna p = penggunaList.get(i);
            noIndukCmb.addItem(p.getNoInduk());
        }

        //set isbn buku to cmb
        bukuList = DataLibrary.getInstance().getMasterListBuku(true);
        isbnCmb.removeAllItems();
        isbnCmb.addItem("--Pilih ISBN--");
        for (Buku buku : bukuList) {
            isbnCmb.addItem(buku.getIsbn());
        }

        masterSumberBukuList = sumberBukuController.fetchData(masterSumberBukuList, true);
        sumberBukuList = masterSumberBukuList;
        setTableValue();
    }

    public void reInitValiables() {
        sumberBukuModel = new SumberBuku();
        editMode = false;
        editButton.setSelected(editMode);
        editButton.setText("Edit Record");
        noIndukCmb.setSelectedIndex(0);
        isbnCmb.setSelectedIndex(0);
        newPerson.setSelected(false);
        personTxt.setEnabled(false);
        personTxt.setText("Nama Donatur");
        noIndukCmb.setEnabled(true);
        jumlahSpin.setValue(0);
    }

    public void setTableValue() {
        tableModel = new DefaultTableModel(columnName.toArray(), sumberBukuList.size());
        tableView.setModel(tableModel);
        for (int i = 0; i < sumberBukuList.size(); i++) {
            Pengguna p = sumberBukuList.get(i).getPengguna();
            tableView.setValueAt((i + 1), i, 0);
            if (p.getId() != 0) {
                tableView.setValueAt(sumberBukuList.get(i).getPengguna().getNoInduk(), i, 1);
                tableView.setValueAt(sumberBukuList.get(i).getPengguna().getNama(), i, 2);
            } else {
                tableView.setValueAt("", i, 1);
                tableView.setValueAt(sumberBukuList.get(i).getNamaPemberi(), i, 2);
            }
            tableView.setValueAt(sumberBukuList.get(i).getBuku().getJudul(), i, 3);
            tableView.setValueAt(sumberBukuList.get(i).getJumlah(), i, 4);
        }
    }

    public void resetInfoBuku() {
        judulBukuLbl.setText(": ");
        penerbitLbl.setText(": ");
        thnTerbitLbl.setText(": ");
        kategoriLbl.setText(": ");
        stockLbl.setText(": ");
    }

    public void resetAllFieldInput() {
        noIndukCmb.setSelectedIndex(0);
        newPerson.setSelected(false);
        personTxt.setText("");
        isbnCmb.setSelectedIndex(0);
        jumlahSpin.setValue(0);
        resetInfoBuku();
    }

    public Buku getBukuByIsbn(String isbn) {
        for (Buku buku : bukuList) {
            if (buku.getIsbn().equals(isbn)) {
                return buku;
            }
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        noIndukCmb = new javax.swing.JComboBox();
        newPerson = new javax.swing.JCheckBox();
        personTxt = new javax.swing.JTextField();
        resetBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        isbnCmb = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jumlahSpin = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        thnTerbitLbl = new javax.swing.JLabel();
        penerbitLbl = new javax.swing.JLabel();
        judulBukuLbl = new javax.swing.JLabel();
        kategoriLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stockLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        searchValTxt = new javax.swing.JTextField();
        searchColCmb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableView = new javax.swing.JTable();
        editButton = new javax.swing.JToggleButton();
        deleteButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Pengelola Donasi Buku");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Input"));

        jLabel2.setText("No. Induk");

        noIndukCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        newPerson.setText("Tidak ada nomor induk");
        newPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPersonActionPerformed(evt);
            }
        });

        personTxt.setText("Nama Donatur");
        personTxt.setEnabled(false);
        personTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                personTxtFocusGained(evt);
            }
        });

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jLabel8.setText("ISBN");

        isbnCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        isbnCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnCmbActionPerformed(evt);
            }
        });

        jLabel1.setText("Jumlah");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(submitBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(35, 35, 35)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(25, 25, 25)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newPerson)
                            .addComponent(noIndukCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(personTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(isbnCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jumlahSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(noIndukCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(isbnCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jumlahSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBtn)
                    .addComponent(submitBtn))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Informasi Buku"));

        jLabel4.setText("Judul Buku");

        jLabel5.setText("Tahun Terbit");

        jLabel6.setText("Penerbit");

        jLabel7.setText("Kategori");

        thnTerbitLbl.setText("jLabel8");

        penerbitLbl.setText("jLabel9");

        judulBukuLbl.setText("jLabel10");

        kategoriLbl.setText("jLabel11");

        jLabel9.setText("Stock");

        stockLbl.setText("jLabel10");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockLbl)
                    .addComponent(kategoriLbl)
                    .addComponent(judulBukuLbl)
                    .addComponent(penerbitLbl)
                    .addComponent(thnTerbitLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(judulBukuLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(penerbitLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(thnTerbitLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kategoriLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockLbl)
                    .addComponent(jLabel9))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Donasi"));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchColCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Search By");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchColCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchValTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn)
                    .addComponent(searchValTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchColCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableView);

        editButton.setText("Edit Record");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(deleteButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        sumberBukuList = new ArrayList<SumberBuku>();
        String searchCol = searchColCmb.getSelectedItem().toString();
        String searchParam = searchValTxt.getText();
        if (!searchParam.equals("")) {
            sumberBukuList = sumberBukuController.search(masterSumberBukuList, searchParam, searchCol);
        } else {
            sumberBukuList = masterSumberBukuList;
        }
        setTableValue();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (tableView.getSelectedRow() == -1) {
            editButton.setSelected(false);
            editButton.setText("Edit Record");
            JOptionPane.showMessageDialog(null, "You must select a record before edit", "Row Did Not Selected Yet", JOptionPane.WARNING_MESSAGE);

        } else {
            if (editButton.isSelected()) {
                editButton.setText("Cancel Edit");
                editMode = true;
                sumberBukuModel = sumberBukuList.get(tableView.getSelectedRow());
                if (sumberBukuModel != null) {
                    if (sumberBukuModel.getPengguna().getId() != 0) {
                        noIndukCmb.setEnabled(true);
                        noIndukCmb.setSelectedItem(sumberBukuModel.getPengguna().getNoInduk());
                        newPerson.setSelected(false);
                        personTxt.setText("Nama Donatur");
                        personTxt.setEnabled(false);
                    } else {
                        noIndukCmb.setSelectedIndex(0);
                        noIndukCmb.setEnabled(false);
                        newPerson.setSelected(true);
                        personTxt.setText(sumberBukuModel.getNamaPemberi());
                        personTxt.setEnabled(true);
                    }
                    isbnCmb.setSelectedItem(sumberBukuModel.getBuku().getIsbn());
                    jumlahSpin.setValue(sumberBukuModel.getJumlah());
                } else {
                    editButton.setText("Edit Record");
                    reInitValiables();
                    tableView.clearSelection();
                    JOptionPane.showMessageDialog(null, "No information available in selected row", "Information is Missing", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                editButton.setText("Edit Record");
                tableView.clearSelection();
                reInitValiables();
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure want to delete selected record?", "Delete Record",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            sumberBukuModel = sumberBukuList.get(tableView.getSelectedRow());
            if (sumberBukuModel != null) {
                sumberBukuModel.setActive(false);
                sumberBukuModel.setUserInput(DataLibrary.getInstance().getUser().getUsername());
                editMode = true;
                sumberBukuController.setSumberBukuModel(sumberBukuModel);
                sumberBukuController.setEditMode(editMode);
                sumberBukuController.save();

                //reset table
                tableView.clearSelection();
                masterSumberBukuList = sumberBukuController.fetchData(masterSumberBukuList, true);
                sumberBukuList = masterSumberBukuList;
                setTableValue();
                resetAllFieldInput();
                reInitValiables();
            }
        } else {
            tableView.clearSelection();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void personTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_personTxtFocusGained
        // TODO add your handling code here:
        personTxt.setText("");
    }//GEN-LAST:event_personTxtFocusGained

    private void newPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPersonActionPerformed
        // TODO add your handling code here:
        if (newPerson.isSelected()) {
            noIndukCmb.setSelectedIndex(0);
            noIndukCmb.setEnabled(false);
            personTxt.setEnabled(true);
        } else {
            noIndukCmb.setEnabled(true);
            personTxt.setEnabled(false);
            personTxt.setText("Nama Donatur");
        }
    }//GEN-LAST:event_newPersonActionPerformed

    private void isbnCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnCmbActionPerformed
        // TODO add your handling code here:
        if (isbnCmb.getSelectedIndex() > 0) {
            resetInfoBuku();
            String selectedIsbn = String.valueOf(isbnCmb.getSelectedItem());
            Buku temp = getBukuByIsbn(selectedIsbn);
            if (temp != null) {
                judulBukuLbl.setText(": " + temp.getJudul());
                penerbitLbl.setText(": " + temp.getPenerbit().getNamaPenerbit());
                thnTerbitLbl.setText(": " + temp.getTahunTerbit());
                kategoriLbl.setText(": " + temp.getRakBuku().getNamaJenis());
                stockLbl.setText(": " + temp.getStock());
            } else {
                JOptionPane.showMessageDialog(null, "Selected ISBN has no information", "Empty Information", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            resetInfoBuku();
        }
    }//GEN-LAST:event_isbnCmbActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        if (editMode) {
            JOptionPane.showMessageDialog(null, "You are in edit mode.\n Please click cancel edit button before reseting field", "Cannot reset field", JOptionPane.WARNING_MESSAGE);
        } else {
            resetAllFieldInput();
        }
    }//GEN-LAST:event_resetBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        Pengguna pengguna = new Pengguna();
        Buku buku = bukuList.get(isbnCmb.getSelectedIndex() - 1);
        String penggunaStr = "";
        if (newPerson.isSelected()) {
            penggunaStr = personTxt.getText();
        } else {
            pengguna = penggunaList.get(noIndukCmb.getSelectedIndex() - 1);
        }
        if (buku != null && (pengguna != null || !penggunaStr.equals(""))) {
            sumberBukuModel.setBuku(buku);
            sumberBukuModel.setPengguna(pengguna);
            sumberBukuModel.setJumlah((Integer) jumlahSpin.getValue());
            sumberBukuModel.setNamaPemberi(penggunaStr);
            sumberBukuModel.setActive(true);
            sumberBukuModel.setUserInput(DataLibrary.getInstance().getUser().getUsername());

            sumberBukuController.setSumberBukuModel(sumberBukuModel);
            sumberBukuController.setEditMode(editMode);
            String message = sumberBukuController.save();
            if (!message.equals("success")) {
                JOptionPane.showMessageDialog(null, (editMode ? "Update" : "Submit") + " data gagal", "Submit Data Error", JOptionPane.ERROR_MESSAGE);
            }

            resetAllFieldInput();
            reInitValiables();

            //refresh table
            masterSumberBukuList = sumberBukuController.fetchData(masterSumberBukuList, true);
            sumberBukuList = masterSumberBukuList;
            bukuList = DataLibrary.getInstance().getMasterListBuku(true);
            setTableValue();
        } else {
            JOptionPane.showMessageDialog(null, "ISBN or Nama Pengarang is empty", "Cannot Insert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JToggleButton editButton;
    private javax.swing.JComboBox isbnCmb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judulBukuLbl;
    private javax.swing.JSpinner jumlahSpin;
    private javax.swing.JLabel kategoriLbl;
    private javax.swing.JCheckBox newPerson;
    private javax.swing.JComboBox noIndukCmb;
    private javax.swing.JLabel penerbitLbl;
    private javax.swing.JTextField personTxt;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox searchColCmb;
    private javax.swing.JTextField searchValTxt;
    private javax.swing.JLabel stockLbl;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTable tableView;
    private javax.swing.JLabel thnTerbitLbl;
    // End of variables declaration//GEN-END:variables
}
