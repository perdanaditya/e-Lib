/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.sch.elib.view;

import id.sch.elib.controller.UserController;
import id.sch.elib.model.Pengguna;
import id.sch.elib.model.User;
import id.sch.elib.util.DataLibrary;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
//import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rizky.aditya
 */
public class PenggunaView extends javax.swing.JInternalFrame {

    /**
     * Creates new form PenggunaView
     */
    private UserController userController;
    private ArrayList<User> masterUserList;
    private DefaultTableModel tableModel;
    private ArrayList<User> userList;
    private ArrayList<String> columnName;
    private boolean editMode;
    private User userModel;
    private File selectedFile;

    public PenggunaView() {
        initComponents();
        reInitValiables();

        tableList.setAutoCreateRowSorter(true);
        userController = new UserController();
        columnName = new ArrayList<String>();
        columnName.add("No. Induk");
        columnName.add("Nama");
        columnName.add("Jabatan");
        columnName.add("Jenis Kelamin");
        columnName.add("E-mail");
        columnName.add("Username");

        //set search column by
        columnSearchCmb.removeAllItems();
        for (int i = 0; i < columnName.size(); i++) {
            columnSearchCmb.addItem(columnName.get(i));
        }

        thnLahirCmb.removeAllItems();
        thnLahirCmb.addItem("-- Tahun --");
        for (int i = 1970; i < 2017; i++) {
            thnLahirCmb.addItem(i);
        }

        tgLlahirCmb.removeAllItems();
        tgLlahirCmb.addItem("-- Tanggal --");
        for (int i = 1; i < 32; i++) {
            tgLlahirCmb.addItem(i);
        }

        masterUserList = userController.fetchData(masterUserList, false);
        userList = masterUserList;
        setTableValue();
    }

    public void setTableValue() {

        tableModel = new DefaultTableModel(columnName.toArray(), userList.size());
        tableList.setModel(tableModel);
        for (int i = 0; i < userList.size(); i++) {
            tableList.setValueAt(userList.get(i).getPengguna().getNoInduk(), i, 0);
            tableList.setValueAt(userList.get(i).getPengguna().getNama(), i, 1);
            tableList.setValueAt(userList.get(i).getPengguna().getJabatan(), i, 2);
            tableList.setValueAt(userList.get(i).getPengguna().getJenisKelamin(), i, 3);
            tableList.setValueAt(userList.get(i).getEmail(), i, 4);
            tableList.setValueAt(userList.get(i).getUsername(), i, 5);
        }
    }

    public void resetAllFieldInput() {
        noIndukTxt.setText("");
        namaTxt.setText("");
        jabatanCmb.setSelectedIndex(0);
        tempatLahirTxt.setText("");
        kelasCmb.setSelectedIndex(0);
        if (kelasCmb.isEnabled()) {
            kelasCmb.setEnabled(false);
        }
        tgLlahirCmb.setSelectedIndex(0);
        blnLahirCmb.setSelectedIndex(0);
        thnLahirCmb.setSelectedIndex(0);
        kelaminCmb.setSelectedIndex(0);
        alamatTxtArea.setText("");
        usernameTxt.setText("");
        passwordTxt.setText("");
        emailTxt.setText("");
        //path
        sizeTxt.setText("");
        image.setIcon(null);
    }

    public void reInitValiables() {
        userModel = new User();
        selectedFile = new File("");
        editMode = false;
        editBtn.setSelected(editMode);
        editBtn.setText("Edit Record");
    }
    
    public String checkNoIndukAndUsername(String noInduk, String username) {
        for (int i = 0; i < masterUserList.size(); i++) {
            User user = masterUserList.get(i);
            if (user.getUsername().equals(username)) {
                return "username";
            } else if (user.getPengguna().getNoInduk().equals(noInduk)) {
                return "noInduk";
            }
        }
        return "valid";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        namaTxt = new javax.swing.JTextField();
        tempatLahirTxt = new javax.swing.JTextField();
        tgLlahirCmb = new javax.swing.JComboBox();
        blnLahirCmb = new javax.swing.JComboBox();
        thnLahirCmb = new javax.swing.JComboBox();
        kelaminCmb = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        alamatTxtArea = new javax.swing.JTextArea();
        passwordTxt = new javax.swing.JPasswordField();
        resetBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        noIndukTxt = new javax.swing.JTextField();
        jabatanCmb = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        previewPanel = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        browseBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        kelasCmb = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        sizeTxt = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        searchValueTxt = new javax.swing.JTextField();
        columnSearchCmb = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        deleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JToggleButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Manage Pengguna");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Input"));

        jLabel1.setText("No. Induk *");

        jLabel2.setText("Nama *");

        jLabel3.setText("Jabatan *");

        jLabel4.setText("Tempat Lahir *");

        jLabel5.setText("Tanggal Lahir *");

        jLabel6.setText("Jenis Kelamin *");

        jLabel7.setText("Alamat *");

        jLabel8.setText("Password *");

        tgLlahirCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Tanggal --" }));

        blnLahirCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Bulan --", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));

        thnLahirCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Tahun --" }));

        kelaminCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Pilih Jenis Kelamin --", "Laki - Laki", "Perempuan" }));

        alamatTxtArea.setColumns(20);
        alamatTxtArea.setRows(5);
        jScrollPane1.setViewportView(alamatTxtArea);

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jabatanCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Pilih Jabatan --", "Siswa", "Pegawai" }));
        jabatanCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jabatanCmbActionPerformed(evt);
            }
        });

        jLabel10.setText("Picture");

        previewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Kelas");

        kelasCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Pilih Kelas --", "X", "XI", "XII" }));
        kelasCmb.setEnabled(false);

        jLabel12.setText("Username *");

        jLabel13.setText("E-mail *");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*mandatory field");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(submitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetBtn))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(noIndukTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(namaTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tempatLahirTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(145, 145, 145)
                                        .addComponent(sizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tgLlahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blnLahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(thnLahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(kelaminCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jabatanCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kelasCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(browseBtn))
                            .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(noIndukTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(browseBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jabatanCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(kelasCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tempatLahirTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tgLlahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blnLahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thnLahirCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(kelaminCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetBtn)
                            .addComponent(submitBtn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(13, 13, 13)
                        .addComponent(sizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("List View"));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Searching Panel"));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        columnSearchCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Search By");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 350, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(columnSearchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchBtn)
                .addComponent(searchValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(columnSearchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel9))
        );

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableList);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addGap(0, 536, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(editBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jabatanCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jabatanCmbActionPerformed
        // TODO add your handling code here:
        if (jabatanCmb.getSelectedItem().equals("Siswa")) {
            kelasCmb.setEnabled(true);
        } else {
            kelasCmb.setEnabled(false);
        }
    }//GEN-LAST:event_jabatanCmbActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        resetAllFieldInput();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        boolean check = true;
        String noIndStr = noIndukTxt.getText();
        String namaStr = namaTxt.getText();
        String jabatanStr = null;
        if (jabatanCmb.getSelectedIndex() != 0) {
            jabatanStr = jabatanCmb.getSelectedItem().toString();
        } else {
            check = false;
        }
        String tmpatLahirStr = tempatLahirTxt.getText();
        String kelasStr = null;
        if (kelasCmb.isEnabled() && kelasCmb.getSelectedIndex() != 0) {
            kelasStr = kelasCmb.getSelectedItem().toString();
        }
        Date date = new Date();
        Calendar cal = Calendar.getInstance();
        if (tgLlahirCmb.getSelectedIndex() != 0 && blnLahirCmb.getSelectedIndex() != 0 && thnLahirCmb.getSelectedIndex() != 0) {
            cal.set(Integer.parseInt(thnLahirCmb.getSelectedItem().toString()), blnLahirCmb.getSelectedIndex() - 1, Integer.parseInt(tgLlahirCmb.getSelectedItem().toString()));
            date = cal.getTime();
        } else {
            check = false;
        }
        String kelamin = null;
        if (kelaminCmb.getSelectedIndex() != 0) {
            kelamin = kelaminCmb.getSelectedItem().toString();
        } else {
            check = false;
        }
        String alamatStr = alamatTxtArea.getText();
        String usernameStr = usernameTxt.getText();
        String passwordStr = passwordTxt.getText();
        String emailStr = emailTxt.getText();
        //path
        //previewPanel (buat pict)
        String valid = "";
        if (!editMode) {
            valid = checkNoIndukAndUsername(noIndStr, usernameStr);
        }
        if (!editMode && !valid.equals("valid")) {
            check = false;
        }
        byte[] photo;
        try {
            System.out.println("CONVERTING IMAGE TO BYTE[]");
//            photo = Files.readAllBytes(selectedFile.toPath());
            FileInputStream fis = new FileInputStream(selectedFile);
            photo = new byte[(int) selectedFile.length()];
            fis.read(photo);
            for (int i = 0; i < photo.length; i++) {
                System.out.print((char) photo[i]);
            }
            System.out.println("IMAGE CONVERTED");
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "CONVERT ERROR: " + e.getMessage(), "IMAGE CONVERT ERROR", JOptionPane.WARNING_MESSAGE);
            System.out.println("CONVERT ERROR: " + e.getMessage());
            photo = new byte[0];
        }

        if (!noIndStr.equals("") && !namaStr.equals("") && !tmpatLahirStr.equals("")
                && !alamatStr.equals("") && !usernameStr.equals("") && !passwordStr.equals("")
                && !emailStr.equals("") && check) {
            if (!emailStr.contains("@") || !emailStr.contains(".")) {
                JOptionPane.showMessageDialog(null, "Your E-Mail is not valid, please check your input", "Submit Failed", 0);
            } else {
                //set data user
                userModel.setUsername(usernameStr);
                userModel.setPassword(passwordStr);
                userModel.setEmail(emailStr);
                userModel.setActive(true);

                //set data pengguna
                userModel.setUserInput(DataLibrary.getInstance().getUser().getUsername());
                if (userModel.getPengguna() == null) {
                    userModel.setPengguna(new Pengguna());
                }
                userModel.getPengguna().setNama(namaStr);
                userModel.getPengguna().setNoInduk(noIndStr);
                userModel.getPengguna().setJabatan(jabatanStr);
                userModel.getPengguna().setKelas(kelasStr);
                userModel.getPengguna().setTempatLahir(tmpatLahirStr);
                userModel.getPengguna().setTanggalLahir(date);
                userModel.getPengguna().setJenisKelamin(kelamin);
                userModel.getPengguna().setAlamat(alamatStr);
                userModel.getPengguna().setPhoto(photo);
                userModel.getPengguna().setActive(true);
                userModel.getPengguna().setUserInput(DataLibrary.getInstance().getUser().getUsername());

                userController.setUser(userModel);
                userController.setEditMode(editMode);
                String message = userController.save();
                if (!message.equals("success")) {
                    JOptionPane.showMessageDialog(null, (editMode ? "Update" : "Submit") + " data gagal", "Submit Data Error", JOptionPane.ERROR_MESSAGE);
                }
                resetAllFieldInput();
                reInitValiables();

                //refresh table
                masterUserList = userController.fetchData(masterUserList, true);
                userList = masterUserList;
                setTableValue();
            }
        } else {
            if (valid.equalsIgnoreCase("noInduk")) {
                JOptionPane.showMessageDialog(null, "No. Induk has been registered, please check your data", "Submit Failed", 0);
            }
            if (valid.equalsIgnoreCase("username")) {
                JOptionPane.showMessageDialog(null, "Username is already taken", "Submit Failed", 0);
            } else {
                JOptionPane.showMessageDialog(null, "Mandatory field can not be empty, please check your input", "Submit Failed", 0);
            }
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        userList = new ArrayList<User>();
        String searchCol = columnSearchCmb.getSelectedItem().toString();
        String searchParam = searchValueTxt.getText();
        if (!searchParam.equals("")) {
            userList = userController.search(masterUserList, searchParam, searchCol);
        } else {
            userList = masterUserList;
        }
        setTableValue();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure want to delete selected record?", "Delete Record",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            userModel = userList.get(tableList.getSelectedRow());
            userModel.setActive(false);
            userModel.getPengguna().setActive(false);
            userModel.setUserInput(DataLibrary.getInstance().getUser().getUsername());
            editMode = true;
            userController.setUser(userModel);
            userController.setEditMode(editMode);
            userController.save();

            //reset table
            tableList.clearSelection();
            masterUserList = userController.fetchData(masterUserList, true);
            userList = masterUserList;
            setTableValue();
            resetAllFieldInput();
            reInitValiables();
        } else {
            tableList.clearSelection();
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        if (editBtn.isSelected()) {
            editBtn.setText("Cancel Edit");
            editMode = true;
            userModel = userList.get(tableList.getSelectedRow());

            noIndukTxt.setText(userModel.getPengguna().getNoInduk());
            namaTxt.setText(userModel.getPengguna().getNama());
            jabatanCmb.setSelectedItem(userModel.getPengguna().getJabatan());
            if (userModel.getPengguna().getJabatan().equals("Siswa")) {
                kelasCmb.setSelectedItem(userModel.getPengguna().getKelas());
            }
            tempatLahirTxt.setText(userModel.getPengguna().getTempatLahir());
            Date temp = userModel.getPengguna().getTanggalLahir();
            Calendar dateInCal = Calendar.getInstance();
            dateInCal.setTime(temp);
            tgLlahirCmb.setSelectedItem(dateInCal.get(Calendar.DATE));
            blnLahirCmb.setSelectedIndex(dateInCal.get(Calendar.MONTH) + 1);
            thnLahirCmb.setSelectedItem(dateInCal.get(Calendar.YEAR));
            kelaminCmb.setSelectedItem(userModel.getPengguna().getJenisKelamin());
            alamatTxtArea.setText(userModel.getPengguna().getAlamat());
            usernameTxt.setText(userModel.getUsername());
            passwordTxt.setText(userModel.getPassword());
            emailTxt.setText(userModel.getEmail());
            //path
            //previewPanel (buat pict)
            try {
//                selectedFile = fileChooser.getSelectedFile();
                FileOutputStream fo = new FileOutputStream("img.jpg");
                fo.write(userModel.getPengguna().getPhoto());
                fo.close();
                selectedFile = null;
                selectedFile = new File("img.jpg");
//                String pathName = selectedFile.getAbsolutePath();
                Image img = ImageIO.read(selectedFile);
                img = img.getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                image.setIcon(icon);
                //TODO trim pathName
//                pathLabel.setText(pathName);
                int i = 0;
                long size = selectedFile.length();
                while (size >= 1024) {
                    size = size / 1024;
                    i++;
                }
                sizeTxt.setText(size + " " + DataLibrary.getInstance().getSizeScale(i));
            } catch (Exception e) {
                System.out.println("EXCEPTION IN IMG LOAD: " + e.getMessage());
            }
        } else {
            editBtn.setText("Edit Record");
            editMode = false;
            userModel = new User();
            if (selectedFile.exists()) {
                selectedFile.delete();
            }
            resetAllFieldInput();
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("JPEG file", "jpg", "jpeg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            // user selects a file
            try {
                selectedFile = fileChooser.getSelectedFile();
//                String pathName = selectedFile.getAbsolutePath();
                Image img = ImageIO.read(selectedFile);
                img = img.getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                image.setIcon(icon);
                //TODO save to db
            } catch (Exception e) {
                System.out.println("EXCEPTION IN IMG LOAD: " + e.getMessage());
            }
        } else {
            image.setIcon(new ImageIcon());
        }
    }//GEN-LAST:event_browseBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea alamatTxtArea;
    private javax.swing.JComboBox blnLahirCmb;
    private javax.swing.JButton browseBtn;
    private javax.swing.JComboBox columnSearchCmb;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JToggleButton editBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox jabatanCmb;
    private javax.swing.JComboBox kelaminCmb;
    private javax.swing.JComboBox kelasCmb;
    private javax.swing.JTextField namaTxt;
    private javax.swing.JTextField noIndukTxt;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchValueTxt;
    private javax.swing.JLabel sizeTxt;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField tempatLahirTxt;
    private javax.swing.JComboBox tgLlahirCmb;
    private javax.swing.JComboBox thnLahirCmb;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables
}
